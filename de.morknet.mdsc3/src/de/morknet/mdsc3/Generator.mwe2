module de.morknet.mdsc3.Generator

import org.eclipse.emf.mwe.utils.*

var modelpath
var logGenPath
var configGenPath

var backup
var email
var cahome
var sslhome
var nagiostimeout

var admin_group
var management_group

var slotname='model'

Workflow
{
	bean = StandaloneSetup
	{
		registerGeneratedEPackage = "de.morknet.mdsc3.mdsc3.Mdsc3Package"
		platformUri = ".."
	}

	component = org.eclipse.xtext.mwe.Reader
	{
		// lookup all resources on the classpath
		// useJavaClassPath = true

		// or define search scope explicitly
		path = modelpath

		// this class will be generated by the xtext generator
		register = de.morknet.mdsc3.MDSC3StandaloneSetup  {}
		load =
		{
			slot = slotname
			type = 'Model'
		}
	}

	component = org.eclipse.xpand2.Generator
	{
		metaModel = org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel {}
		expand = "de::morknet::mdsc3::xpt::Main::Main FOREACH ${slotname}"
		skipOnErrors = false

		globalVarDef = { name="backup"            value="'${backup}'" }
		globalVarDef = { name="cahome"            value="'${cahome}'" }
		globalVarDef = { name="sslhome"           value="'${sslhome}'" }
		globalVarDef = { name="email"             value="'${email}'" }
		globalVarDef = { name="nagiostimeout"     value="'${nagiostimeout}'" }
		globalVarDef = { name="admin_group"       value="'${admin_group}'" }
		globalVarDef = { name="management_group"  value="'${management_group}'" }

		outlet =
		{
			path = logGenPath
			postprocessor = de.morknet.mdsc3.postprocessor.unix.UnixBeautifier {}
		}

		outlet =
		{
			name = "CONFIG"
			path = configGenPath
			postprocessor = de.morknet.mdsc3.postprocessor.unix.UnixBeautifier {}
		}
	}
}
